1.Γράψτε ένα κώδικα σε Python ο οποίος να παίρνει την διάσταση ενός τετραγώνου και θα φτιάχνει μέσα από λίστες τον αντίστοιχο πίνακα. Στην συνέχεια θα βρίσκει το πλήθος των θέσεων και θα γεμίζει στην τύχη τις μισές με μονάδες. Σκοπός είναι να μετρήσετε πόσες τετράδες από μονάδες υπάρχουν οριζόντια, κάθετα, και διαγώνια. Το πρόγραμμα επαναλλαμβάνεται 100 φορές (για την ίδια διάσταση) και επιστρέφει τον μέσο όρο των τετράδων.

2.Γράψτε ένα κώδικα σε Python ο οποίος ελέγχει αν ο ν όρος της ακολουθίας Fibonacci είναι πρώτος ή όχι. Για να απαντήσετε αν ένας αριθμός p είναι πρώτος θα πρέπει για 20 τυχαίες επιλογές του a να ισχύει ότι a^p=a mod p. Ο κώδικάς σας παίρνει τον όρο της ακολουθίας Fibonacci από το χρήστη.

3.Χρησιμοποιήστε το API του ΟΠΑΠ (https://www.opap.gr/web-services) από την Python για να εμφανίσετε τα στατιστικά των αριθμών που κερδίζουν την πρώτη κλήρωση της ημέρας για το ΚΙΝΟ τον τρέχον μήνα.

4.Γράψτε ένα κώδικα σε Python ο οποίος να παίρνει σαν είσοδο ένα αρχείο ASCII κειμένου και να το κόβει σε συνεχόμενες τριάδες λέξεων (όλες τις δυνατές). Στην συνέχεια, διαλέγει τυχαία μια τριάδα και προσπαθεί να συντάξει ένα τυχαίο κείμενο από αυτό, χρησιμοποιώντας τις δυο τελευταίες λέξεις και επιλέγοντας μια τριάδα που να ξεκινάει από αυτές τις δυο. Το πρόγραμμα ολοκληρώνεται, όταν γράψει 200 λέξεις ή δεν μπορεί να επιλεγχεί άλλη τριάδα λέξεων.

5.Γράψτε ένα κώδικα σε Python ο οποίος να παίρνει τις διαστάσεις ενός ορθογωνίου και θα φτιάχνει μέσα από λίστες τον αντίστοιχο πίνακα. Στην συνέχεια θα βρίσκει το πλήθος των θέσεων και γεμίζει στην τύχη τις μισές με S και τις μισές με O. Σκοπός είναι να μετρήσετε πόσες φορές εμφανίζεται το SOS οριζόντια, κάθετα, και διαγώνια. Το πρόγραμμα επαναλλαμβάνεται 100 φορές (για τις ίδιες διαστάσεις) και επιστρέφει τον μέσο όρο των τριάδων SOS.

6.Γράψτε ένα κώδικα σε Python ο οποίος συνδέεται στο twitter (χρησιμοποιείστε το tweepy) και επιλέξτε τα 10 τελευταία tweets του χρήστη που θα σας δηλώσει ο χρήστης. Εμφανίστε τις 5 μεγαλύτερες λέξεις και τις 5 μικρότερες λέξεις του.

7.Χρησιμοποιήστε το API του ΟΠΑΠ (https://www.opap.gr/web-services) από την Python για να βρείτε τον αριθμό που εμφανίζεται συχνότερα στο ΚΙΝΟ κάθε μέρα του τρέχοντα μήνα.

8.Γράψτε ένα κώδικα σε Python ο οποίος να παίρνει σαν είσοδο ένα λεξικό από αρχείο το οποίο περιέχει τα κρυπτονομίσματα (όνομα) που έχει ένας χρήστης και πόσα από αυτά. Χρησιμοποιείστε το API https://min-api.cryptocompare.com για να βρείτε σε τι ποσό σε ευρώ αντιστοιχούν.

9.Γράψτε ένα κώδικα σε Python ο οποίος να παίρνει σαν είσοδο ένα αρχείο ASCII κειμένου και μετατρέπει τον κάθε χαρακτήρα στον αντίστοιχο αριθμό ASCII και κρατάει τους μονούς. Εμφανίστε τα στατιστικά εμφάνισης του κάθε γράμματος με “μπάρες” χρησιμοποιώντας το χαρακτήρα *, όπου κάθε * αντιστοιχεί σε 1%

10.Γράψτε ένα κώδικα σε Python ο οποίος να παίρνει σαν είσοδο ένα λεξικό από αρχείο. Το λεξικό μπορεί να περιέχει και άλλα λεξικά, λίστες, κτλ. Για κάθε εμφωλευμένο λεξικό, λίστα, το βάθος αυξάνεται κατά 1. Εμφανίστε στο χρήστη το μεγαλύτερο βάθος του λεξικού.

11.Γράψτε ένα κώδικα σε Python ο οποίος να παίρνει σαν είσοδο ένα λεξικό από αρχείο. Το λεξικό μπορεί να περιέχει και άλλα λεξικά, λίστες, κτλ. Εμφανίστε στο χρήστη τα κλειδιά που εμφανίζονται τις περισσότερες φορές, ελέγχοντας και τα εμφωλευμένα λεξικά.

12.Γράψτε ένα κώδικα σε Python ο οποίος να παίρνει σαν είσοδο ένα αρχείο ASCII κειμένου και μετατρέπει τον κάθε χαρακτήρα του στον “κατοπτρικό” του χαρακτήρα ASCII. Κατοπτρικοί χαρακτήρες είναι αυτοί των οποίων το άθροισμα είναι 255. Εμφανίστε το κατοπτρικό κείμενο στο χρήστη με ανάποδη σειρά χαρακτήρων.

13.Γράψτε ένα κώδικα σε Python ο οποίος να παίρνει σαν είσοδο ένα αρχείο ASCII κειμένου, το χωρίζει σε λέξεις και εμφανίζει τα ζευγάρια λέξεων όπου το συνολικό τους μήκος χαρακτήρων. Κάθε ζευγάρι φεύγει από το σύνολο και το πρόγραμμα τελειώνει όταν εξαντληθούν τα ζευγάρια.

